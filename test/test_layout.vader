" vim: et ts=2 sts=2 sw=2

Before:
  call padre#Enable()

  let t:options = ['noswapfile', 'buftype=nofile', 'filetype=TestBuf', 'nobuflisted']
  let g:buffer_number = padre#buffer#Create('Test_Tabs', t:options)

After:
  Restore

Execute (Check that we can find a tab containing a buffer):
  let g:original_number_tabs = tabpagenr('$')
  tabnew
  tabnew
  execute 'buffer ' . g:buffer_number
  tabnew
  tabnew
  execute 'buffer ' . g:buffer_number

Then:
  AssertEqual [g:original_number_tabs + 2, g:original_number_tabs + 4], padre#layout#GetTabNumbersContainingBufferName('Test_Tabs')

  quit
  quit
  quit
  quit

Execute (Check we can create a new tab):
  let g:start_tabpagenr = tabpagenr()

  call padre#layout#OpenTabWithBuffer('Test_Tabs', 1)

Then:
  AssertEqual g:start_tabpagenr + 1, tabpagenr()
  AssertEqual 'Test_Tabs', padre#buffer#GetBufNameForBufNum(bufnr('%'))

  quit

Execute (Check we can open an existing tab if it contains the buffer specified):
  let g:original_number_tabs = tabpagenr('$')
  tabnew
  execute 'buffer ' . g:buffer_number
  tabnew
  execute 'buffer ' . g:buffer_number

  call padre#layout#OpenTabWithBuffer('Test_Tabs', 0)

Then:
  AssertEqual [g:original_number_tabs + 1, g:original_number_tabs + 2], padre#layout#GetTabNumbersContainingBufferName('Test_Tabs')
  AssertEqual g:start_tabpagenr + 1, tabpagenr()
  AssertEqual 'Test_Tabs', padre#buffer#GetBufNameForBufNum(bufnr('%'))

  quit
  quit

Execute (Check we can create an extra tab containing the buffer specified):
  tabnew
  execute 'buffer ' . g:buffer_number

  call padre#layout#OpenTabWithBuffer('Test_Tabs', 1)

Then:
  AssertEqual [g:original_number_tabs + 1, g:original_number_tabs + 2], padre#layout#GetTabNumbersContainingBufferName('Test_Tabs')
  AssertEqual g:start_tabpagenr + 2, tabpagenr()
  AssertEqual 'Test_Tabs', padre#buffer#GetBufNameForBufNum(bufnr('%'))

  quit
  quit

Execute (Check we can close all tabs containing a buffer):
  let g:original_number_tabs = tabpagenr('$')

  call padre#layout#OpenTabWithBuffer('Test_Tabs', 1)
  call padre#layout#OpenTabWithBuffer('Test_Tabs', 1)

  vnew

  AssertEqual g:original_number_tabs + 2, tabpagenr('$')

  call padre#layout#CloseTabsWithBuffer('Test_Tabs')
Then:
  AssertEqual g:original_number_tabs, tabpagenr('$')
